<Window x:Class="OSerialPort.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OSerialPort"
        mc:Ignorable="d"
        Title="OSrtialPort" WindowStartupLocation="CenterScreen"
        Icon="/OSerialPort;component/icon/favicon.ico" SizeToContent="Width" ResizeMode="CanMinimize">
    <Viewbox x:Name="RootViewbox">
        <DockPanel x:Name="RootDockPanel">
            <!--菜单栏-->
            <Menu x:Name="Menu" DockPanel.Dock="Top">
                <MenuItem x:Name="FileMenuItem" Header="文件(_F)" Style="{StaticResource MMenuItem}">
                    <MenuItem x:Name="ExitMenuItem" Header="退出(_X)" Click="ExitMenuItem_Click"/>
                </MenuItem>
                <MenuItem x:Name="ToolMenuItem" Header="工具(_T)" Style="{StaticResource MMenuItem}">
                    <MenuItem x:Name="CalcMenuItem" Header="计算器" Click="CalcMenuItem_Click"/>
                </MenuItem>
                <MenuItem x:Name="ConfMenuItem" Header="配置(_C)" Style="{StaticResource MMenuItem}">
                    <MenuItem x:Name="EncodingMenuItem" Header="字节编码">
                        <MenuItem x:Name="ASCIIMenuItem" Header="ASCII" IsChecked="{Binding SerialPortModel.ASCIIEnable}"
                                  Click="ASCIIMenuItem_Click"/>
                        <MenuItem x:Name="UTF8MenuItem" Header="UTF-8" IsChecked="{Binding SerialPortModel.UTF8Enable}"
                                  Click="UTF8MenuItem_Click"/>
                        <MenuItem x:Name="UTF16MenuItem" Header="Unicode" IsChecked="{Binding SerialPortModel.UTF16Enable}"
                                  Click="UTF16MenuItem_Click"/>
                        <MenuItem x:Name="UTF32MenuItem" Header="UTF-32" IsChecked="{Binding SerialPortModel.UTF32Enable}"
                                  Click="UTF32MenuItem_Click"/>
                    </MenuItem>
                    <Separator/>
                    <MenuItem x:Name="DtrEnableMenuItem" Header="DtrEnable" IsChecked="{Binding SerialPortModel.DtrEnable}"/>
                    <MenuItem x:Name="RtsEnableMenuItem" Header="RtsEnable" IsChecked="{Binding SerialPortModel.RtsEnable}"/>
                    <MenuItem x:Name="HandshakeMenuItem" Header="流控制">
                        <MenuItem x:Name="NoneMenuItem" Header="None"
                                  IsChecked="{Binding SerialPortModel.NoneEnable}"/>
                        <MenuItem x:Name="RequestToSendMenuItem" Header="Hardware"
                                  IsChecked="{Binding SerialPortModel.RequestToSendEnable}"/>
                        <MenuItem x:Name="XOnXOffMenuItem" Header="XOnXOff"
                                  IsChecked="{Binding SerialPortModel.XOnXOffEnable}"/>
                        <MenuItem x:Name="RequestToSendXOnXOffMenuItem" Header="Hardware and XOnXOff"
                                  IsChecked="{Binding SerialPortModel.RequestToSendXOnXOffEnable}"/>
                    </MenuItem>
                </MenuItem>
                <MenuItem x:Name="ViewMenuItem" Header="视图(_V)" Style="{StaticResource MMenuItem}"/>
                <MenuItem x:Name="HelpMenuItem" Header="帮助(_H)" Style="{StaticResource MMenuItem}">
                    <MenuItem x:Name="VerMenuItem" Header="{Binding HelpModel.VerInfo}" IsEnabled="False"/>
                    <MenuItem x:Name="VerUpMenuItem" Header="检查更新" Click="VerUpMenuItem_Click"/>
                    <Separator/>
                    <MenuItem x:Name="RPMenuItem" Header="Gitee存储库" Click="RPMenuItem_Click"/>
                    <MenuItem x:Name="IssueMenuItem" Header="报告问题" Click="IssueMenuItem_Click"/>
                </MenuItem>
            </Menu>
            <!--状态栏-->
            <StatusBar x:Name="Status" DockPanel.Dock="Bottom" Background="#FF007ACD">
                <StatusBarItem x:Name="InfoStatusBraItem" Content="{Binding DepictInfo}" HorizontalAlignment="Left"
                               Style="{StaticResource SBStatusBarItem}"/>
                <StatusBarItem x:Name="TimeStatusBraItem" Content="{Binding TimerModel.SystemTime}" HorizontalAlignment="Right"
                               Style="{StaticResource SBStatusBarItem}"/>
            </StatusBar>
            <!--ALL工作区-->
            <Grid x:Name="Grid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <!--接受区和发送区-->
                <Grid x:Name="DataGrid" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="3*"/>
                    </Grid.RowDefinitions>
                    <!--接收区-->
                    <GroupBox x:Name="ReceDataGroupBox" Header="{Binding RecvModel.ReceHeader}" Grid.Row="0" Margin="5,0,2,0"
                              BorderBrush="#FF007ACD">
                        <TextBox x:Name="ReceTextBox" Style="{StaticResource RSTextBox}"
                                 local:MvvmTextBox.Buffer="{Binding RecvModel.ReceData}" IsReadOnly="True"
                                 Width="478" Height="278"/>
                    </GroupBox>
                    <!--发送区-->
                    <GroupBox x:Name="SendDataGroupBox" Header="{Binding SendModel.SendDataCount}"
                              HeaderStringFormat="{}发送区：已发送{0}字节" Grid.Row="1" Margin="5,0,2,2"
                              BorderBrush="#FF007ACD">
                        <Grid x:Name="SendDataGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="SendTextBox" Grid.RowSpan="2" Style="{StaticResource RSTextBox}"
                                     Text="{Binding SendModel.SendData}" Width="388" Height="78"/>
                            <Button x:Name="SendsButton" Content="多项发送" Grid.Row="0" Grid.Column="1"
                                    Style="{StaticResource SendButton}" Click="Sends"/>
                            <Button x:Name="SenfButton" Content="发送" Grid.Row="1" Grid.Column="1"
                                    Style="{StaticResource SendButton}" Click="Send"/>
                        </Grid>
                    </GroupBox>
                </Grid>
                <!--串口配置区和辅助区-->
                <Grid x:Name="SerialPortGrid" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <GroupBox x:Name="ConfigGroupPort" Header="串口配置" Grid.Row="0" Margin="2,0,5,2" BorderBrush="#FF007ACD">
                        <Grid x:Name="SPConfGrid">
                            <!--串口配置区-->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="ComTextBox" Text="端口：" Grid.Row="0" Grid.Column="0"
                                       Style="{StaticResource SPTextBlock}"/>
                            <ComboBox x:Name="ComComboBox" Grid.Row="0" Grid.Column="1" Style="{DynamicResource SPComboBox}"
                                      ItemsSource="{Binding SerialPortModel.LSPPort}"
                                      SelectedItem="{Binding SerialPortModel.SPPort}"
                                      IsEnabled="{Binding SerialPortModel.SPPortEnable}"/>
                            <TextBlock x:Name="BaudTextBox" Text="波特率：" Grid.Row="1" Grid.Column="0"
                                       Style="{StaticResource SPTextBlock}"/>
                            <ComboBox x:Name="BaudComboBox" Grid.Row="1" Grid.Column="1" Style="{DynamicResource SPComboBox}"
                                      ItemsSource="{Binding SerialPortModel.LSPBaudRate}"
                                      SelectedItem="{Binding SerialPortModel.SPBaudRate}"
                                      IsEnabled="{Binding SerialPortModel.SPBaudRateEnable}"/>
                            <TextBlock x:Name="DataTextBox" Text="数据位：" Grid.Row="2" Grid.Column="0"
                                       Style="{StaticResource SPTextBlock}"/>
                            <ComboBox x:Name="DataComboBox" Grid.Row="2" Grid.Column="1" Style="{DynamicResource SPComboBox}"
                                      ItemsSource="{Binding SerialPortModel.LSPDataBits}"
                                      SelectedItem="{Binding SerialPortModel.SPDataBits}"
                                      IsEnabled="{Binding SerialPortModel.SPDataBitsEnable}"/>
                            <TextBlock x:Name="StopTextBox" Text="停止位：" Grid.Row="3" Grid.Column="0"
                                       Style="{StaticResource SPTextBlock}"/>
                            <ComboBox x:Name="StopConboBox" Grid.Row="3" Grid.Column="1" Style="{DynamicResource SPComboBox}"
                                      ItemsSource="{Binding SerialPortModel.LSPStopBits}"
                                      SelectedItem="{Binding SerialPortModel.SPStopBits}"
                                      IsEnabled="{Binding SerialPortModel.SPStopBitsEnable}"/>
                            <TextBlock x:Name="ParityTextBox" Text="校验位：" Grid.Row="4" Grid.Column="0"
                                       Style="{StaticResource SPTextBlock}"/>
                            <ComboBox x:Name="ParityComboBox" Grid.Row="4" Grid.Column="1" Style="{DynamicResource SPComboBox}"
                                      ItemsSource="{Binding SerialPortModel.LSPParity}"
                                      SelectedItem="{Binding SerialPortModel.SPParity}"
                                      IsEnabled="{Binding SerialPortModel.SPParityEnable}"/>
                            <Ellipse x:Name="OnOffElipse" Grid.Row="5" Grid.Column="0" Grid.RowSpan="2" Style="{StaticResource SPEilipse}"
                                      Fill="{Binding SerialPortModel.SPBrush}"/>
                            <Button x:Name="OnOffButton" Grid.Row="5" Grid.Column="1" Style="{DynamicResource SPButton}"
                                    Content="{Binding SerialPortModel.OpenCloseSP}" Click="OpenCloseSP"/>
                        </Grid>
                    </GroupBox>
                    <GroupBox x:Name="HoldingGroupBox" Header="信号状态" Grid.Row="1" Margin="2,0,5,2" BorderBrush="#FF007ACD">
                        <!--信号状态区-->
                        <Grid x:Name="HoldingGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="CtsTextBlock" Text="Cts" Grid.Row="0" Grid.Column="0"
                                       Style="{StaticResource HDTextBlock}" Margin="0,3,0,0"/>
                            <Ellipse x:Name="CtsElipse" Grid.Row="0" Grid.Column="1"
                                     Style="{StaticResource HDEilipse}"  Margin="0,3,9,0"
                                     Fill="{Binding SerialPortModel.CtsBrush}"/>
                            <TextBlock x:Name="DsrTextBlock" Text="Dsr" Grid.Row="0" Grid.Column="2"
                                       Style="{StaticResource HDTextBlock}" Margin="0,3,11,0"/>
                            <Ellipse x:Name="DsrElipse" Grid.Row="0" Grid.Column="3"
                                     Style="{StaticResource HDEilipse}" Margin="0,3,13,0"
                                     Fill="{Binding SerialPortModel.DsrBrush}"/>
                        </Grid>
                    </GroupBox>
                    <GroupBox x:Name="AssistGroupBox" Header="辅助" Grid.Row="2" Margin="2,0,5,2" BorderBrush="#FF007ACD">
                        <Grid x:Name="AssistGrid">
                            <!--辅助区-->
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox x:Name="HexReceCheckBox" Content="Hex接收" Grid.Row="0" Grid.Column="0" Margin="0,3.25,5,5"
                                      IsChecked="{Binding RecvModel.HexRece}" Style="{StaticResource AssistCheckBox}"/>
                            <CheckBox x:Name="HexSendCheckBox" Content="Hex发送" Grid.Row="0" Grid.Column="1" Margin="5,3.25,0,5"
                                      IsChecked="{Binding SendModel.HexSend}" Style="{StaticResource AssistCheckBox}"/>
                            <CheckBox x:Name="AutoSendCheckBox" Content="自动发送(ms)" Grid.Row="1" Grid.Column="0" Margin="0,0,5,5" 
                                      IsChecked="{Binding AutoSend}" Style="{StaticResource AssistCheckBox}"/>
                            <TextBox x:Name="AutoSendNumTextBox" Text="{Binding SendModel.AutoSendNum}" Grid.Row="1" Grid.Column="1"
                                     Margin="5,0,0,5" Style="{DynamicResource AutoSendNumTextBox}"/>
                            <CheckBox x:Name="SaveReceCheckBox" Content="保存接收" Grid.Row="2" Grid.Column="0" Margin="0,0,5,5" 
                                      IsChecked="{Binding RecvModel.SaveRece}" Style="{StaticResource AssistCheckBox}"/>
                            <Button x:Name="SaveReceButton" Content="路径选择"  Grid.Row="2" Grid.Column="1"
                                    Margin="5,0,0,5" Style="{StaticResource AssistButton}" Click="SaveRecePath"/>
                            <Button x:Name="ClearReceButton" Content="清接收区"  Grid.Row="3" Grid.Column="0"
                                    Margin="0,0,5,5" Style="{StaticResource AssistButton}" Click="ClarReceData"/>
                            <Button x:Name="ClearSendButton" Content="清发送区"  Grid.Row="3" Grid.Column="1"
                                    Margin="5,0,0,5" Style="{StaticResource AssistButton}" Click="ClearSendData"/>
                            <Button x:Name="ClearCountButton" Content="清空计数"  Grid.Row="4" Grid.ColumnSpan="2"
                                    Margin="0,0,0,0" Style="{StaticResource AssistButton}" Click="ClearCount"/>
                        </Grid>
                    </GroupBox>
                </Grid>
            </Grid>
        </DockPanel>
    </Viewbox>
</Window>
